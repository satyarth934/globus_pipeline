# Use an official base image, such as Ubuntu
FROM ubuntu:latest

# Set noninteractive to avoid prompts during package installation
ARG DEBIAN_FRONTEND=noninteractive

# Install Python and pip, along with required utilities for logging
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    python3 \
    python3-pip \
    python3-full \
    # pipx \
    git \
    vim \
    ca-certificates \
    \
    # Added for potential file management needs
    rsync && \  
    # Clean up to reduce image size
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*


# Clone the GitHub repository containing the processing code
RUN git clone https://github.com/satyarth934/globus_pipeline.git
WORKDIR /globus_pipeline


RUN python3 -m venv /opt/globus_venv
ENV PATH="/opt/globus_venv/bin:$PATH"

# Activate the virtual environment and install your package
# This uses shell form to ensure the virtual environment is activated
RUN /bin/bash /opt/globus_venv/bin/activate
RUN if [ -f requirements.txt ]; then \
        pip3 install --no-cache-dir -r requirements.txt; \
    fi


# Define environment variables for source and destination directories
ENV PROCESSING_SRC_DIR="/mnt/processing_src"
ENV PROCESSING_DST_DIR="/mnt/processing_dst"
ENV ARGS_CONFIG_FILE="/mnt/args_config_file.cfg"

# # Change WORKDIR
# WORKDIR $PROCESSING_SRC_DIR
WORKDIR /globus_pipeline/src

# # Copy the main processing Python script into the container
# COPY processing_test_1/process.py $PROCESSING_SRC_DIR

# Script to process files and handle outputs using Bash commands


# Put this command in the SPIN UI to run the program
# `python3 main.py @$ARGS_CONFIG_FILE`